title: Api
body:
  - h1: Api
  - p: All the methods and options of the squarified library are documented here.

  - h2: Draw Layout Api

  - p: |
      The draw layout API is the main API for the treemap. It provides methods to draw the treemap layout.
      Now, the draw layout is opinionated and provides a minimalistic API to draw the treemap layout.

  - h3: createTreemap

  - p: >
      Create a new instance of the treemap. This method returns a new instance of the treemap.

  - pre.js: |
      import { createTreemap } from 'squarified'
      const treemap = createTreemap()

  - h2: Data Transform Api

  - p: |
      The data transform API provides methods to transform the data into a format that the treemap can understand.

  - h3: c2m

  - p: >
      Convert the original data into a format data that the treemap can understand. This method returns a new data format.

  - pre.js: |
      import { c2m } from 'squarified'
      const data = [{ name: 'root', value: 100 }, { name: 'root2', value: 50}, { name: 'root3', value: 150 }]
      const transformedData = c2m(data, 'value' , (d) => ({ ...d, label: d.name }))

  - h3: findRelativeNode

  - p: >
      Find the relative node of the given node. This method returns the relative node of the given node.
      Note: This function is based on the `visit` and respect the calculated coordinates.

  - h3: findRelativeNodeById

  - p: >
      Find the relative node of the given node by id. This method returns the relative node of the given node by id.
      Note: This function is based on the `visit`.

  - h3: flattenModule

  - p: >
      Flatten the module. This method returns the flattened module.

  - h3: getNodeDepth

  - p: >
      Get the depth of the node. This method returns the depth of the node.

  - h3: sortChildrenByKey

  - p: >
      Sort the children by key. This method returns the sorted children by key.

  - h3: visit

  - p: >
      Walk Nodes.
